<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20200501</FitNesseVersion>
  <rootPath>LearningSuit.SlimSuit.BuyMilkTest</rootPath>
  <result>
    <counts>
      <right>4</right>
      <wrong>2</wrong>
      <ignores>0</ignores>
      <exceptions>6</exceptions>
    </counts>
    <date>2020-12-03T22:22:55+08:00</date>
    <runTimeInMillis>440</runTimeInMillis>
    <content>&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="LearningSuit.SlimSuit.SetUp"&gt;.LearningSuit.SlimSuit.SetUp&lt;/a&gt; &lt;a href="LearningSuit.SlimSuit.SetUp?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;fitnesse.slim.test&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;fitnesse.fixtures&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td colspan="4"&gt;&lt;span class="pass"&gt;should I buy milk&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;cash in wallet credit card&lt;/td&gt;
		&lt;td&gt;pints of milk remaining&lt;/td&gt;
		&lt;td colspan="2"&gt;go to store?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;0 &lt;span class="error"&gt;No Method setCashInWalletCreditCard[1] in class fitnesse.slim.test.ShouldIBuyMilk.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
execute() -&amp;gt; void
getClass() -&amp;gt; class java.lang.Class
goToStore() -&amp;gt; class java.lang.String
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setCashInWallet(int) -&amp;gt; void
setCreditCard(java.lang.String) -&amp;gt; void
setPintsOfMilkRemaining(int) -&amp;gt; void
table(java.util.List) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;no &lt;span class="error"&gt;Can't convert no to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&amp;gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;[&lt;span class="diff"&gt;no&lt;/span&gt;] &lt;span class="fail"&gt;expected [&lt;span class="diff"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;no&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;10 &lt;span class="error"&gt;No Method setCashInWalletCreditCard[1] in class fitnesse.slim.test.ShouldIBuyMilk.
 Available methods:
equals(java.lang.Object) -&amp;gt; boolean
execute() -&amp;gt; void
getClass() -&amp;gt; class java.lang.Class
goToStore() -&amp;gt; class java.lang.String
hashCode() -&amp;gt; int
notify() -&amp;gt; void
notifyAll() -&amp;gt; void
setCashInWallet(int) -&amp;gt; void
setCreditCard(java.lang.String) -&amp;gt; void
setPintsOfMilkRemaining(int) -&amp;gt; void
table(java.util.List) -&amp;gt; void
toString() -&amp;gt; class java.lang.String
wait() -&amp;gt; void
wait(long) -&amp;gt; void
wait(long, int) -&amp;gt; void&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;no &lt;span class="error"&gt;Can't convert no to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&amp;gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;[&lt;span class="diff"&gt;no&lt;/span&gt;] &lt;span class="fail"&gt;expected [&lt;span class="diff"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;yes&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td colspan="4"&gt;&lt;span class="pass"&gt;should I buy milk&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;cash in wallet&lt;/td&gt;
		&lt;td&gt;credit card&lt;/td&gt;
		&lt;td&gt;pints of milk remaining&lt;/td&gt;
		&lt;td&gt;go to store?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;yes&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;no&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;yes&lt;/td&gt;
		&lt;td&gt;one &lt;span class="error"&gt;Can't convert one to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&amp;gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;no&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td colspan="6"&gt;&lt;span class="pass"&gt;should I buy milk&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;cash in wallet&lt;/td&gt;
		&lt;td&gt;#comment&lt;/td&gt;
		&lt;td&gt;credit card&lt;/td&gt;
		&lt;td&gt;pints of milk remaining&lt;/td&gt;
		&lt;td colspan="2"&gt;go to store?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;we actually allow negative amounts, meaning debt&lt;/td&gt;
		&lt;td&gt;yes&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;no&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;this is document&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;0&lt;/td&gt;
		&lt;td&gt;must have at least 2 euros&lt;/td&gt;
		&lt;td&gt;yes&lt;/td&gt;
		&lt;td&gt;one &lt;span class="error"&gt;Can't convert one to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&amp;gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="2"&gt;&lt;span class="pass"&gt;no&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;</content>
    <relativePageName>BuyMilkTest</relativePageName>
    <instructions>
      <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='fitnesse.slim.test'}</instruction>
        <slimResult>pass(fitnesse.slim.test)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>import_0_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ImportExpectation</type>
          <evaluationMessage>fitnesse.slim.test</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='import_0_1', instruction='import', path='fitnesse.fixtures'}</instruction>
        <slimResult>pass(fitnesse.fixtures)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>import_0_1</instructionId>
          <col>0</col>
          <row>2</row>
          <type>ImportExpectation</type>
          <evaluationMessage>fitnesse.fixtures</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_0', instruction='make', instanceName='decisionTable_1', className='ShouldIBuyMilk', args=[]}</instruction>
        <slimResult>pass(should I buy milk)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_1_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>should I buy milk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_4', instruction='call', instanceName='decisionTable_1', methodName='setCashInWalletCreditCard', args=[0]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_1_4</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>No Method setCashInWalletCreditCard[1] in class fitnesse.slim.test.ShouldIBuyMilk.
 Available methods:
equals(java.lang.Object) -&gt; boolean
execute() -&gt; void
getClass() -&gt; class java.lang.Class
goToStore() -&gt; class java.lang.String
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setCashInWallet(int) -&gt; void
setCreditCard(java.lang.String) -&gt; void
setPintsOfMilkRemaining(int) -&gt; void
table(java.util.List) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_5', instruction='call', instanceName='decisionTable_1', methodName='setPintsOfMilkRemaining', args=[no]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_1_5</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>Can't convert no to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_7', instruction='call', instanceName='decisionTable_1', methodName='goToStore', args=[]}</instruction>
        <slimResult>fail(a=no;e=0)</slimResult>
        <expectation>
          <status>fail</status>
          <instructionId>decisionTable_1_7</instructionId>
          <col>2</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <actual>no</actual>
          <expected>0</expected>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_9', instruction='call', instanceName='decisionTable_1', methodName='setCashInWalletCreditCard', args=[10]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_1_9</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>No Method setCashInWalletCreditCard[1] in class fitnesse.slim.test.ShouldIBuyMilk.
 Available methods:
equals(java.lang.Object) -&gt; boolean
execute() -&gt; void
getClass() -&gt; class java.lang.Class
goToStore() -&gt; class java.lang.String
hashCode() -&gt; int
notify() -&gt; void
notifyAll() -&gt; void
setCashInWallet(int) -&gt; void
setCreditCard(java.lang.String) -&gt; void
setPintsOfMilkRemaining(int) -&gt; void
table(java.util.List) -&gt; void
toString() -&gt; class java.lang.String
wait() -&gt; void
wait(long) -&gt; void
wait(long, int) -&gt; void</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_10', instruction='call', instanceName='decisionTable_1', methodName='setPintsOfMilkRemaining', args=[no]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_1_10</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>Can't convert no to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_12', instruction='call', instanceName='decisionTable_1', methodName='goToStore', args=[]}</instruction>
        <slimResult>fail(a=no;e=0)</slimResult>
        <expectation>
          <status>fail</status>
          <instructionId>decisionTable_1_12</instructionId>
          <col>2</col>
          <row>3</row>
          <type>ReturnedValueExpectation</type>
          <actual>no</actual>
          <expected>0</expected>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_0', instruction='make', instanceName='decisionTable_2', className='ShouldIBuyMilk', args=[]}</instruction>
        <slimResult>pass(should I buy milk)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_2_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>should I buy milk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_4', instruction='call', instanceName='decisionTable_2', methodName='setCashInWallet', args=[0]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_2_4</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_5', instruction='call', instanceName='decisionTable_2', methodName='setCreditCard', args=[yes]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_2_5</instructionId>
          <col>1</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_6', instruction='call', instanceName='decisionTable_2', methodName='setPintsOfMilkRemaining', args=[1]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_2_6</instructionId>
          <col>2</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_8', instruction='call', instanceName='decisionTable_2', methodName='goToStore', args=[]}</instruction>
        <slimResult>pass(no)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_2_8</instructionId>
          <col>3</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>no</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_10', instruction='call', instanceName='decisionTable_2', methodName='setCashInWallet', args=[0]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_2_10</instructionId>
          <col>0</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_11', instruction='call', instanceName='decisionTable_2', methodName='setCreditCard', args=[yes]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_2_11</instructionId>
          <col>1</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_12', instruction='call', instanceName='decisionTable_2', methodName='setPintsOfMilkRemaining', args=[one]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_2_12</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>Can't convert one to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_2_14', instruction='call', instanceName='decisionTable_2', methodName='goToStore', args=[]}</instruction>
        <slimResult>pass(no)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_2_14</instructionId>
          <col>3</col>
          <row>3</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>no</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_0', instruction='make', instanceName='decisionTable_3', className='ShouldIBuyMilk', args=[]}</instruction>
        <slimResult>pass(should I buy milk)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_3_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>should I buy milk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_4', instruction='call', instanceName='decisionTable_3', methodName='setCashInWallet', args=[0]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_3_4</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_5', instruction='call', instanceName='decisionTable_3', methodName='setCreditCard', args=[yes]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_3_5</instructionId>
          <col>2</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_6', instruction='call', instanceName='decisionTable_3', methodName='setPintsOfMilkRemaining', args=[1]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_3_6</instructionId>
          <col>3</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_8', instruction='call', instanceName='decisionTable_3', methodName='goToStore', args=[]}</instruction>
        <slimResult>pass(no)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_3_8</instructionId>
          <col>4</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>no</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_10', instruction='call', instanceName='decisionTable_3', methodName='setCashInWallet', args=[0]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_3_10</instructionId>
          <col>0</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_11', instruction='call', instanceName='decisionTable_3', methodName='setCreditCard', args=[yes]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_3_11</instructionId>
          <col>2</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_12', instruction='call', instanceName='decisionTable_3', methodName='setPintsOfMilkRemaining', args=[one]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <status>error</status>
          <instructionId>decisionTable_3_12</instructionId>
          <type>VoidReturnExpectation</type>
          <evaluationMessage>Can't convert one to integer.
Tried to invoke: fitnesse.slim.test.ShouldIBuyMilk.setPintsOfMilkRemaining(int) -&gt; void. On instance of: fitnesse.slim.test.ShouldIBuyMilk</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_3_14', instruction='call', instanceName='decisionTable_3', methodName='goToStore', args=[]}</instruction>
        <slimResult>pass(no)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_3_14</instructionId>
          <col>4</col>
          <row>3</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>no</evaluationMessage>
        </expectation>
      </instructionResult>
    </instructions>
  </result>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>"C:\Program Files\Java\jdk1.8.0_152\bin\java" -cp C:\project\fitnesse-learn\lib\fitnesse-20200501-standalone.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut></stdOut>
    <stdErr></stdErr>
  </executionLog>
  <finalCounts>
    <right>0</right>
    <wrong>1</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>806</totalRunTimeInMillis>
</testResults>

